library(maser)
library(tidyverse)
library(ggpubr)
# path to folder:
path <- "data/brain/"
samples <- maser(path,
c("drone",
"queen"),
ftype = "JC")
head(summary(samples,
type = "SE")[, 1:8])
## However, we can also test:
samples_counts <- as.data.frame(as.matrix(counts(samples)))
## Calculate mean rows:
samples_counts$mean_rows <-  rowMeans(samples_counts)
## We can calculate the mean and median using summary():
summary(samples_counts$mean_rows)
quantile(samples_counts$mean_rows,
0.1)
ggplot(data = samples_counts,
aes(x = mean_rows)) +
xlim(0, 500) +
geom_vline(xintercept = mean(samples_counts$mean_rows),
linetype = 'dashed',
colour = 'red') +
geom_vline(xintercept = median(samples_counts$mean_rows),
linetype = 'dashed',
colour = 'orange') +
geom_vline(xintercept = quantile(samples_counts$mean_rows,
0.1),
linetype = 'dashed',
colour = 'blue') +
geom_density() +
theme_bw()
samples_filt <- filterByCoverage(samples,
avg_reads = 5)
## We can also extract counts and examine these:
samples_counts <-  counts(samples)
nrow(summary(samples_filt,
type = "SE")[, 1:8])
head(summary(samples_filt,
type = "SE")[, 1:8])
samples_top <- topEvents(samples_filt,
fdr = 0.05,
deltaPSI = 0.1)
nrow(summary(samples_top))
splice_events_df <- as.data.frame(table(table(summary(samples_top)$GeneID)))
colnames(splice_events_df) <- c("Number_of_events",
"Count")
## Plot:
ggplot(data = splice_events_df,
aes(x = Number_of_events,
y = Count)) +
geom_point(size = 5,
colour = "blue") +
xlab(label = "Number of splicing events") +
ylab(label = "Number of genes") +
theme_bw()
samples_top_df <- as.data.frame(summary(samples_top))
dir.create(path = "results")
saveRDS(object = samples_top_df,
file = "results/splice_events_brain_jc.rds")
head(samples_top_df)
samples_gene <- geneEvents(samples_top,
geneS = "LOC724417",
fdr = 0.05,
deltaPSI = 0.1)
print(samples_gene)
volcano(samples_filt,
fdr = 0.05,
deltaPSI = 0.1,
type = "A3SS")
## Generate plot for A3SS splicing events:
A3SS_v_plot <- volcano(samples_filt,
fdr = 0.05,
deltaPSI = 0.1,
type = "A3SS")
## Generate plot for A5SS splicing events:
A5SS_v_plot <- volcano(samples_filt,
fdr = 0.05,
deltaPSI = 0.1,
type = "A5SS")
## Generate plot for skipped exons splicing events:
SE_v_plot <- volcano(samples_filt,
fdr = 0.05,
deltaPSI = 0.1,
type = "SE")
## Generate plot for retained introns splicing events:
RI_v_plot <- volcano(samples_filt,
fdr = 0.05,
deltaPSI = 0.1,
type = "RI")
## Generate plot for mutually exclusive exons splicing events:
MXE_v_plot <- volcano(samples_filt,
fdr = 0.05,
deltaPSI = 0.1,
type = "MXE")
## Generate a combined plot:
ggarrange(A3SS_v_plot,
A5SS_v_plot,
SE_v_plot,
RI_v_plot,
MXE_v_plot,
ncol = 3,
nrow = 2,
labels = c("A",
"B",
"C",
"D",
"E"),
common.legend = TRUE)
## Generate a combined plot:
ggarrange(A3SS_v_plot,
A5SS_v_plot,
SE_v_plot,
RI_v_plot,
MXE_v_plot,
ncol = 3,
nrow = 2,
labels = c("A",
"B",
"C",
"D",
"E"),
common.legend = TRUE)
combined_v_plot <- ggarrange(A3SS_v_plot,
A5SS_v_plot,
SE_v_plot,
RI_v_plot,
MXE_v_plot,
ncol = 3,
nrow = 2,
labels = c("A",
"B",
"C",
"D",
"E"),
common.legend = TRUE)
ggsave(filename = "results/combined_volcano_splice_events_brain.png",
plot = combined_v_plot)
samples_filt_df <- as.data.frame(summary(samples_filt))
write.table(x = samples_filt_df,
file = "results/filtered_maser_events_sig_brain.txt",
sep = "\t",
quote = FALSE,
row.names = FALSE,
col.names = TRUE)
dotplot(samples_top,
type = "SE")
## Generate plot for A3SS splicing events:
A3SS_d_plot <- dotplot(samples_filt,
type = "A3SS")
## Generate plot for A5SS splicing events:
A5SS_d_plot <- dotplot(samples_filt,
type = "A5SS")
## Generate plot for skipped exons splicing events:
SE_d_plot <- dotplot(samples_filt,
type = "SE")
## Generate plot for retained introns splicing events:
RI_d_plot <- dotplot(samples_filt,
type = "RI")
## Generate plot for mutually exclusive exons splicing events:
MXE_d_plot <- dotplot(samples_filt,
type = "MXE")
combined_d_plot <- ggarrange(A3SS_d_plot,
A5SS_d_plot,
SE_d_plot,
RI_d_plot,
MXE_d_plot,
ncol = 3,
nrow = 2,
labels = c("A",
"B",
"C",
"D",
"E"),
common.legend = TRUE)
ggsave(filename = "results/combined_dotplot_splice_events_brain.png",
plot = combined_d_plot)
combined_d_plot
